apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deploy
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: my-deploy
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-deploy
  minReplicas: 1
  maxReplicas: 17
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50



###################  NOTE: #######################

#  The Role named extension-apiserver-authentication-reader is 
#  a built-in Role created automatically by Kubernetes in the kube-system namespace.

# üìç Location
#  Namespace: kube-system

#  Type: Role (not ClusterRole)

#  Name: extension-apiserver-authentication-reader



#  üìÑ Definition of the Role
#  You can view it with this command:



#  kubectl get role extension-apiserver-authentication-reader -n kube-system -o yaml




#  You should see something like:

#  apiVersion: rbac.authorization.k8s.io/v1
#  kind: Role
#  metadata:
#    name: extension-apiserver-authentication-reader
#    namespace: kube-system
#  rules:
#  - apiGroups: [""]
#    resources: ["configmaps"]
#    resourceNames: ["extension-apiserver-authentication"]
#    verbs: ["get", "list"]


#  üîç Purpose
#  This Role allows access to the following ConfigMap:


#  ConfigMap: kube-system/extension-apiserver-authentication

#  Which contains authentication-related settings needed by aggregated API servers, such as:

#  Metrics Server

#  Custom metrics API servers

#  Any extension APIs registered with the Kubernetes API aggregation layer



#üõ°Ô∏è Why It Matters
#Any component that is an aggregated API server (like Metrics Server or custom metrics adapters) 
#needs to read that config map to know how to delegate authentication to the main API server.

#This is why the metrics-server ServiceAccount needs a RoleBinding to this role.




